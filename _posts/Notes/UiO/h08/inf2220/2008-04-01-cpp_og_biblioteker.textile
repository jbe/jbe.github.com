---
layout: post
title: "C: CPP og biblioteker"
published: true
categories:
  - Notes
  - UiO
  - inf1060
  - C
---

*C sin preprosessor* heter *cpp*. Den tar seg bl.a av konstanter, inkludering av kode og plattformavhengige erstatninger før koden kompileres. Direktiver til cpp begynner med @#@.

<pre name="code" class="c:nocontrols">
#include <stdio.h>;

#define LINUX  // konstanter
#define N 100

typedef unsigned int uint;  // typedefinisjoner
typedef char * string;      // er like, så langt kompilatoren bryr seg

// makroer
#define MIN(x,y) ((x) &lt; (y) ? (x) : (y))
#define ERR(msg)\
   printf("ERROR: %s", mgs);

#if <hvis ulik 0, ta med følgende linjer>
#ifdef <samme, hvis definert>
#ifndef
#else
#endif
</pre>

Makrodirektivene kan f.eks brukes slik:

<pre name="code" class="c:nocontrols">
#ifdef Linux
  int x;
#else
  long x;
#endif
</pre>

Man kan også sette konstanter fra kommandolinjen, med @cc -c -DLINUX@. Slik er det mulig å ha forskjellige versjoner i samme kodebase, som f.eks kan kompileres avhengig av platform.

Som konsekvens, kan koden inneholde feil man aldri tester/oppdager.

*Biblioteker* kompileres med noe a lá @cc -o delfil.c@, som gir filen @delfil.o@. For å referere til disse funksjonene andre steder brukes f.eks @extern int sum(int n);@

De kompilerte filene linkes deretter sammen ved hjelp av kompilatoren: @cc del1.o del2.o -o navn@

For å få felles konstanter, makroer og tilsvarende over flere separate kodefiler, brukes egne header-filer, med navn på formen @navn.h@. De inneholder vanligvis makrodefinisjoner, typedefinisjoner (typedef, union, struct) og eksterne spesifikasjoner (extern). De inkluderes ved et vanlig @include@-direktiv.
